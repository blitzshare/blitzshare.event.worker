version: 2.1
orbs:
  kubernetes: circleci/kubernetes@0.12.0
  aws-cli: circleci/aws-cli@2.0.3

gen_k8s_remplates: &gen_k8s_templates
  - run:
      name: generate k8s templates
      command: |
        sudo apt install gettext-base
        export DOCKER_IMAGE_URL=iamkimchi/blitzshare.api:latest
        export PORT=8000
        export ENV=prod
        export S3_BUCKET_NAME=blitzshare-fileshare-store
        export S3_BUCKET_UPLOAD_KEY=share
        export S3_BUCKET_REGION=eu-west-1
        envsubst  < ./k8s/config/deployment.tml.yaml > ./k8s/config/deployment.yaml
        cat ./k8s/config/deployment.yaml

jobs:
  test_job:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.17.2
    environment:
      GO111MODULE: "on"
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: make install
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - run:
          name: Run test
          command: |
            make test
      - store_test_results:
          path: /tmp/test-reports

  build_job:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.17.2
    environment:
      PROJ_NAME: blitzshare.event.worker
    steps:
      - checkout
      - kubernetes/install-kubectl
      - aws-cli/setup
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false
      - run:
          name: docker build, tag & push
          command: |
            TAG=latest
            docker login -u ${DOCKERHUB_USER} -p ${DOCKERHUB_PASSWORD}
            docker build -t  ${PROJ_NAME}:${TAG} .
            docker tag ${PROJ_NAME}:${TAG} iamkimchi/${PROJ_NAME}:${TAG}
            docker push iamkimchi/${PROJ_NAME}:${TAG}

  deploy_job:
    working_directory: ~/repo
    docker:
      - image: circleci/golang:1.17.2
    steps:
      - checkout
      - kubernetes/install-kubectl
      - aws-cli/setup
      - <<: *gen_k8s_templates
      - run:
          name: Copnfigure cluster context
          command: aws eks --region eu-west-1 update-kubeconfig --name blitzshare-cluster 
      - run:
          name: k8s deploy
          command: |
            pushd k8s
            bash apply.sh
            popd

workflows:
  test-deploy-wf:
    jobs:
      - test_job:
          context: eu-west-1
          # filters:
          #   branches:
          #     ignore:
          #       - main

      - build_job:
          context: eu-west-1
          requires:
            - test_job
          filters:
            branches:
              only:
                - main
      # - deploy_job:
      #     context: eu-west-1
      #     requires:
      #       - build_job
      #     filters:
      #       branches:
      #         only:
      #           - main
